using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TagCloudGenerator.MVC.Controllers;

namespace TagCloudGenerator.MVC.Views {
	interface IMainForm {

		/// <summary>
		/// Property that returns a reference to the OpenFileDialog used to browse for the input file.
		/// </summary>
		System.Windows.Forms.OpenFileDialog FileDialog { get; }

		/// <summary>
		/// Property to return a reference to the FolderBrowserDialog used to browse for output folder.
		/// </summary>
		System.Windows.Forms.FolderBrowserDialog FolderBrowser { get; }

		/// <summary>
		/// Property to get and set the text of the input file path UI component.
		/// </summary>
		string InputFilePath { get; set; }

		/// <summary>
		/// Property to get and set the text of the output folder UI component.
		/// </summary>
		string OutputFolder { get; set; }

		/// <summary>
		/// Property to get and set the text in the UI component containing the number of tags to display in the tag cloud.
		/// </summary>
		string NumberOfWords { get; set; }

		/// <summary>
		/// Property to get and set the UI component representing whether or not to remove common words from the tag cloud.
		/// </summary>
		bool RemoveCommonWords { get; set; }

		/// <summary>
		/// Sets the text of the UI component used to communicate the program's status with the user.
		/// </summary>
		string StatusLabel { set; }

		/// <summary>
		/// Registers an observer to handle the events generated by the UI. Must be a member of the TagCloudGenerator.Controllers 
		/// namespace by convention.
		/// </summary>
		/// <param name="controller">Member of the TagCloudGenerator.Controller namespace responsible for handling events.</param>
		void RegisterObserver(Controller controller);

		/// <summary>
		/// Returns the UI to its initial state.
		/// </summary>
		void Reset();

	}
}
